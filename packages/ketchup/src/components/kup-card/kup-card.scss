@import 'box/kup-card-box';
@import 'built-in/kup-card-built-in';
@import 'collapsible/kup-card-collapsible';
@import 'dialog/kup-card-dialog';
@import 'free/kup-card-free';
@import 'scalable/kup-card-scalable';
@import 'standard/kup-card-standard';

/**
* @prop --kup-card-backdrop: Backdrop of the component when is visible.
* @prop --kup-card-ripple-color: Sets color of ripple effect (for Material layouts).
* @prop --kup-card-scalable-box-shadow: Box shadow of the scalable layouts.
* @prop --kup-card-scalable-starting-font-size: Starting font size for scalable cards.
*/

:host {
  --kup_card_backdrop: var(--kup-card-backdrop, rgba(0, 0, 0, 0.32));
  --kup_card_ripple_color: var(
    --kup-card-ripple-color,
    var(--kup-primary-color)
  );
  --kup_card_scalable_box_shadow: var(
    --kup-card-scalable-box-shadow,
    0 2px 1px -1px rgba(0, 0, 0, 0.2),
    0 1px 1px 0 rgba(0, 0, 0, 0.14),
    0 1px 3px 0 rgba(0, 0, 0, 0.12)
  );
  --kup_card_scalable_starting_font_size: var(
    --kup-card-scalable-starting-font-size,
    3em
  );
  --kup_card_scalable_static_font_size: var(
    --kup-card-scalable-static-font-size
  );

  display: block;
  font-size: var(--kup-font-size);
  height: var(--kup_card_height);
  min-height: var(--kup_card_height);
  min-width: var(--kup_card_width);
  outline: none;
  position: relative;
  width: var(--kup_card_width);
}

:host([is-menu]) {
  display: none;
  animation: fade-in 0.25s ease-out;
}

:host([menu-visible]) {
  box-shadow: var(--kup-box-shadow);
  display: block;
}

@media screen and (max-width: 600px) {
  :host(#kup-tooltip) {
    z-index: 1000 !important;
    width: 100%;
    inset: auto 0px 0px !important;
  }
}

#kup-component {
  height: 100%;
  width: 100%;
}

.mdc-ripple-surface {
  cursor: pointer;
  flex-direction: column;
  display: flex;
  height: 100%;
  position: relative;

  &:before,
  &:after {
    background-color: var(--kup_card_ripple_color);
  }
}

.card-view {
  animation: fade-in 0.25s ease-out;
  display: none;
  height: 100%;
  width: 100%;

  &.visible {
    display: block;
  }
}
